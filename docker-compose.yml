networks:
  app_network:
    name: app_network
    driver: bridge

services:
  
  # PostgresSQL Service
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      #- POSTGRES_USER = myuser
      #- POSTGRES_PASSWORD = 123456
      #- POSTGRES_DB = storedb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: storedb
    ports:
      - "7432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data # Mount volume
      - ./sql/init_postgresql.sql:/docker-entrypoint-initdb.d/init.sql # init script
    networks:
      - app_network
    restart: always
  
  # MySQL Service
  mysql:
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: storedb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: 123456
    ports:
      - "5506:3306"
    volumes:
      - ./volumes/mysql:/var/lib/mysql  # Mount volume สำหรับ MySQL
      #- ./mysql/data:/var/lib/mysql/
      - ./sql/init_mysql.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./mysql/initdb/:/docker-entrypoint-initdb.d/ # init script สำหรับสร้าง Table
    networks:
      - app_network
    restart: always
  
  # SQLite Service ยังติดปัญหา Docker ไม่ทำงาน
  sqlite:
    platform: linux/x86_64
    image: nouchka/sqlite3
    container_name: sqlite_db
    environment:
      DB_PATH: /data/sqlite/storedb.db
    volumes:
      - ./data:/data  # Mount volume สำหรับ SQLite
      #- ./volumes/sqlite:/data/sqlite # Mount volume สำหรับ SQLite
    command: tail -f /dev/null # Keep container running
    networks:
      - app_network
    restart: always

  # SQL Server Service (Azure SQL Edge)
  mssql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: mssql_db
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: "MyPassword@123"
      MSSQL_DATABASE: storedb
    ports:
      - "1533:1433"
    volumes:
      - ./volumes/mssql:/var/opt/mssql  # Mount volume สำหรับ SQL Server
      - ./sql/init_sqlserver.sql:/var/opt/mssql/init.sql
    networks:
      - app_network
    restart: always

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: myuser
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: storedb
    ports:
      - "37017:27017"
    volumes:
      - ./volumes/mongodb:/data/db  # Mount volume สำหรับ MongoDB
      - ./sql/init_mongodb.json:/docker-entrypoint-initdb.d/init.json
    networks:
      - app_network
    restart: always

# docker network ls

# docker compose config - การตรวจสอบความถูกต้อง สมบูรณ์ของไฟล์ docker compose ถ้าถูกต้องจะแสดงการกำหนดค่าที่เราตั้งไว้ แต่ถ้าผิดจะฟ้อง Error ตำแหน่งที่มันไม่รู้จัก
# docker compose up -d -> คำสั่ง Run Docker Compose ใช้ครั้ง แรก
# docker compose up -d --build-> คำสั่ง Run Docker Compose สำหรับการแก้ไข Script ที่ Run ไม่ผ่านทำใหม่

# docker compose ps -> การแสดงรายการ Container ถ้า Container นั้นมีสถานะ UP คือทำงานปกติ 

# docker compose down -> คำสั่ง เอาออก หรือ ลบ Container & Network แต่เก็บ Image เอาไว้ ปกติแค่ Down เฉยก็พอ
# docker compose down --rmi all -> คำสั่งลบออกทั้งหมด Container , Image , Network

# docker network rm _id_ -> คำสั่ง ลบ network

############### UPLOAD GITHUB ###############################
# git init
# git add .
# git commit -m "initial commit"

# web github.com/new
# Create a new repository
# sirichait/LAMP Stack Docker
# Click Button Create Repository

# …or push an existing repository from the command line
# git remote add origin https://github.com/Sirichait/LAMP-Stack-Docker.git
# # git branch -M main
# git push -u origin main












